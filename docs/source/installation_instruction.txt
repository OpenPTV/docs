.. _installation_instruction:

=========================
Installation instructions
=========================


Introduction
------------


The OpenPTV contains of: 

#. Core library written in C, called `liboptv <http://github.com/OpenPTV/openptv/tree/master/liboptv>`_
#. Python/Cython bindings, shipped together with the `liboptv`

The Python bindings allow the easy access to the C library. There are two Python GUI packages that are built around the Python bindings to allow the end-user to use it in a more intuitive way: 

#. Python 2.7 with PyQt4 GUIs and command line scripts from Yosef Meller called The Particle Bureau of Investigation or `pbi <http://github.com/yosefm/pbi>`_ 
#. Python 2.7 based GUI (using TraitsUI, Enthought Chaco, etc.) called `PyPTV <http://github.com/alexlib/pyptv>`_


The overview
~~~~~~~~~~~~

#. if you plan to use C/C++/Fortran/etc. - compile the `liboptv` from source using `cmake`  and testing it using `libcheck` library (see below instructions for Linux and Mac OS X).
#. if you plan to use it only from Python (either through `pbi` command line approach or using `pyptv` GUI) then you can save time on installing `liboptv` by `pip` (see below) or compiling through Python bindings and testing it from Python. 


`liboptv` - a library of the OpenPTV algorithms
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This is a library - you can build it and link to it in your own project, e.g. calling functions from your own GUI or command-line software. When the package is installed correctly, you can reference it in your code by including files from the ``optv`` directory under the standard include path. For example::

    #include <optv/tracking_frame_buf.h>

To build your program you also link it with ``liboptv``. On ``gcc``, one adds the flag
``-loptv`` to the command line. Other compilers and IDEs have their own 
instructions for adding libraries; consult your IDE/compiler manual for the 
details.

The library is using `Check <https://github.com/libcheck/check>`_  framework for the unit tests and Cmake project for the build. We recommend installing both software packages, however it is not obligatory, you may skip the relevant parts if you're not going to develop or test the library.

Installation
~~~~~~~~~~~~

If you want to try the software but not really to get a development version, then you can use one of the two options: Virtual Machine appliance for VirtualBox software or Docker: 

Virtual Machine 
~~~~~~~~~~~~~~~

Ubuntu 18.04 with `pyptv`, see here: https://github.com/alexlib/pyptv/wiki/Getting-started-using-VirtualBox-Linux-(Ubuntu-18.04)-image

Use Docker
~~~~~~~~~~

This method requires to install first: Docker and X Server (for GUI); then, either pull the ready image or build locally the docker image. This installation works on Windows (tested on Win 10), Mac OS X (tested on Mojave 10.14.2) and Linux.  

Please follow the detailed instructions on `PyPTV Dockerfiles <http://github.com/alexlib/dockerfiles>`_ 


Building development version and installation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you want your own copy of the software, compiled and tested on your platform, then you first need to install Python 2.7. Note that we work on the Python 3 version but it is not ready yet. 



Recommended Python distribuitons
--------------------------------

Instead of using the Python 2.7 that comes with your system we recommend to install one of these distributions - later it will miminize the issues of cross-compiled packages.  


#. Anaconda Python distribution for Windows or Linux 
#. Canopy (Enthought Python Distribution) for Mac OS X. 



Installation on Windows 10
~~~~~~~~~~~~~~~~~~~~~~~~~~

We prepared a zipped package that contains all the necessary files (in binary wheel formats) for the installation on Windows 10 with Python 2.7 (the system one that runs from cmd.exe) or the Anaconda Python that runs from the Anaconda Command Prompt. 

#. Download the file from the appropriate release: https://github.com/alexlib/pyptv/releases/tag/windows-pyptv-0.1.1
#. Unzip, look inside this folder and use one of the CMD files, depending on your Python. For instance if it is Anaconda, then open the Anaconda Command prompt and type::  

	$ ./install_pyptv_conda.cmd


Installation on Linux
~~~~~~~~~~~~~~~~~~~~~
The installation on Linux follows very closely the Dockerfile (which is built on top of Ubuntu). The script can be found on this ![gist](https://gist.github.com/alexlib/71b30c1c87138b66bc4d53fdc14e002b). In this example we use Linux Python (and not Anaconda) because of some packages are better installed through pip rather than conda. Basically what it does it:: 


	apt-get update
	apt-get install -y python python-pip python-dev python-virtualenv swig git
	apt-get -y install python-qt4-gl libx11-dev g++ libpcre3 libpcre3-dev
	apt-get -y install libglu1-mesa libgl1-mesa-dev mesa-common-dev freeglut3-dev libgtk2.0-dev

	virtualenv --no-site-packages pyptv-env
	cd pyptv-env/
	source bin/activate

	pip install numpy==1.16.1 cython nose pyyaml fonttools
	pip install optv==0.2.4
	pip install enable
	pip install chaco

	git clone --depth 1 -b master --single-branch https://github.com/alexlib/pyptv.git
	cd pyptv 
	pip install . 
	cd tests
	nosetests --verbose

	cd ../../
	git clone --depth 1 -b master --single-branch https://github.com/OpenPTV/test_cavity.git
	cd pyptv/pyptv/
	python pyptv_gui.py ../../test_cavity


Installing on Mac OS X
~~~~~~~~~~~~~~~~~~~~~~

The easiest way to install is to use Canopy Python Distribution for Mac OS X. It's free and it contains pre-compiled packages that is difficult to build (enable and chaco). 

#. Download Canopy Python Distribution https://store.enthought.com/downloads/ and install it. Open the software and get into Tools -> Canopy Terminal
#. Run the script::  

	git clone --depth 1 -b master --single-branch https://github.com/alexlib/pyptv.git
	cd pyptv
	pip install numpy==1.16.1
	pip install . 
	cd tests
	nosetests --verbose

	cd ../../
	git clone --depth 1 -b master --single-branch https://github.com/OpenPTV/test_cavity.git
	cd pyptv/pyptv/
	python pyptv_gui.py ../../test_cavity


If nothing works, where I can get help?  
---------------------------------------

Send your build logs, description of the problem and details of the operating system, Python version, etc. to our Google group or forum: <https://groups.google.com/forum/#!forum/openptv>

